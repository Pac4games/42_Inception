To generate an SSL/TSL private key:
$ openssl genpkey -algorithm RSA -out [key outfile name]

To generate a TSL v1.3 certificate:
$ openssl req -x509 -newkey rsa:4096 -keyout [key outfile name] -out [cert. outfile name] -days [num] -nodes
{
	req: create a certificate signing request;
	-x509: this makes the certificate self-signed, making it for personal use only;
	-newkey rsa:4096: generates a new SSL/TSL RSA private key with a size of 4096 bits;
	-keyout: estabilishes the name of the outfile for the key;
	-out: estabilishes the name of the outfile for the certificate;
	-days: specifies the number of days this certificate is valid for after its creation;
	-nodes: specifies the key should not be encrypted with a password;

	// Thanks to the "-newkey" flag, no private key needs to previously created.

	// The keys found in the "Certificates" folder were generated with a 3650 validity for
	// testing purposes.
}

In a real world scenario, a certificate signing request (CSR) would also need to be 
generated so the certificate can be signed by a Certificate Authority (CA). 
To do so:
$ openssl req -new -key [key outfile name] -out [request outfile name]

In the nginx config:
- We use port 443 because it is the standard port used to forward an HTTPS connection, which is a
HTTP connection that uses SSL or TSL to encrypt the connection and avoid MIM attacks.
